# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: JavaCI-PR

on:
  push:
    branches: [ main ]
    paths:
      - 'gradle/libs.versions.toml'
      - 'gradle/verification-metadata.xml'
      - 'gradle/wrapper/gradle-wrapper.properties'
      - 'config/ossindex/exclusions.txt'
      - '.github/workflows/gradle-ci.yml'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - '**/README.md'
      - 'CODE_OF_CONDUCT.md'
      - 'CONTRIBUTING.md'
      - 'pull_request_template.md'
      - '.lift/.toml'
      - '**/.lift/.toml'
      - 'SECURITY.md'
      - 'LICENSE'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/assets/**'
      - '.github/workflows/**'
      - '!.github/workflows/gradle-ci.yml'
      - '.github/pr-labeler.yml'
      - 'renovate.json'
      - '.whitesource'
      - 'gradle/libs.versions.toml'
      - 'config/ossindex/exclusions.txt'

permissions: read-all

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      # Set up build environment
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4.2.1
        with:
          distribution: temurin
          java-version: 17
      - name: Build with Gradle (if Ubuntu)
        uses: gradle/gradle-build-action@e2097ccd7e8ed48671dc068ac4efa86d25745b39 # v3.3.1
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          arguments: |
            printVersion build
            -Pci
      - name: Build with Gradle (if Windows)
        uses: gradle/gradle-build-action@e2097ccd7e8ed48671dc068ac4efa86d25745b39 # v3.3.1
        if: ${{ matrix.os != 'ubuntu-latest' }}
        with:
          arguments: |
            printVersion build -x :file-barj-core:jacocoTestCoverageVerification
            -Pci
      - name: 'Upload Test reports - Core'
        if: always()
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: test-report-file-barj-core-${{ matrix.os }}
          path: |
            file-barj-core/build/reports/tests/test
            file-barj-core/build/reports/abort-mission/abort-mission-report.html
          retention-days: 5
      - name: 'Upload Test reports - Job'
        if: always()
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: test-report-file-barj-job-${{ matrix.os }}
          path: |
            file-barj-job/build/reports/tests/test
            file-barj-job/build/reports/abort-mission/abort-mission-report.html
          retention-days: 5
      - name: 'Upload Test reports - Stream IO'
        if: always()
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: test-report-file-barj-stream-io-${{ matrix.os }}
          path: |
            file-barj-stream-io/build/reports/tests/test
            file-barj-stream-io/build/reports/abort-mission/abort-mission-report.html
          retention-days: 5
      - name: Upload coverage to Codecov - Core (if Ubuntu)
        uses: codecov/codecov-action@84508663e988701840491b86de86b666e8a86bed # v4.3.0
        if: ${{ matrix.os == 'ubuntu-latest' && github.repository_owner == 'nagyesta' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./file-barj-core/build/reports/jacoco/report.xml
          flags: core
      - name: Upload coverage to Codecov - Job (if Ubuntu)
        uses: codecov/codecov-action@84508663e988701840491b86de86b666e8a86bed # v4.3.0
        if: ${{ matrix.os == 'ubuntu-latest' && github.repository_owner == 'nagyesta' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./file-barj-job/build/reports/jacoco/report.xml
          flags: job
      - name: Upload coverage to Codecov - Stream IO (if Ubuntu)
        uses: codecov/codecov-action@84508663e988701840491b86de86b666e8a86bed # v4.3.0
        if: ${{ matrix.os == 'ubuntu-latest' && github.repository_owner == 'nagyesta' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./file-barj-stream-io/build/reports/jacoco/report.xml
          flags: stream
